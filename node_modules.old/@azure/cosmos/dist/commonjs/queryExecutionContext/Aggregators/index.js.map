{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/queryExecutionContext/Aggregators/index.ts"],"names":[],"mappings":";;;AAYA,4CA4BC;AAxCD,uCAAuC;AACvC,kCAAkC;AAClC,iEAA2D;AAwClD,kGAxCA,wCAAiB,OAwCA;AAvC1B,6DAAuD;AAuC3B,gGAvCnB,oCAAe,OAuCmB;AAtC3C,yDAAmD;AAsCN,8FAtCpC,gCAAa,OAsCoC;AArC1D,yDAAmD;AAqCS,8FArCnD,gCAAa,OAqCmD;AApCzE,yDAAmD;AAoCwB,8FApClE,gCAAa,OAoCkE;AAnCxF,yEAAmE;AAEnE,mEAA6D;AAC7D,iEAA2D;AAE3D,SAAgB,gBAAgB,CAC9B,aAA4B;IAQ5B,QAAQ,aAAa,EAAE,CAAC;QACtB,KAAK,SAAS;YACZ,OAAO,IAAI,wCAAiB,EAAE,CAAC;QACjC,KAAK,OAAO,CAAC;QACb,KAAK,SAAS;YACZ,OAAO,IAAI,oCAAe,EAAE,CAAC;QAC/B,KAAK,KAAK;YACR,OAAO,IAAI,gCAAa,EAAE,CAAC;QAC7B,KAAK,KAAK;YACR,OAAO,IAAI,gCAAa,EAAE,CAAC;QAC7B,KAAK,KAAK;YACR,OAAO,IAAI,gCAAa,EAAE,CAAC;QAC7B,KAAK,UAAU;YACb,OAAO,IAAI,0CAAkB,EAAE,CAAC;QAClC,KAAK,SAAS;YACZ,OAAO,IAAI,wCAAiB,EAAE,CAAC;QACjC;YACE,OAAO,IAAI,gDAAqB,EAAE,CAAC;IACvC,CAAC;AACH,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { AverageAggregator } from \"./AverageAggregator.js\";\nimport { CountAggregator } from \"./CountAggregator.js\";\nimport { MaxAggregator } from \"./MaxAggregator.js\";\nimport { MinAggregator } from \"./MinAggregator.js\";\nimport { SumAggregator } from \"./SumAggregator.js\";\nimport { StaticValueAggregator } from \"./StaticValueAggregator.js\";\nimport type { AggregateType } from \"../../request/ErrorResponse.js\";\nimport { MakeListAggregator } from \"./MakeListAggregator.js\";\nimport { MakeSetAggregator } from \"./MakeSetAggregator.js\";\n\nexport function createAggregator(\n  aggregateType: AggregateType,\n):\n  | AverageAggregator\n  | CountAggregator\n  | MaxAggregator\n  | MinAggregator\n  | SumAggregator\n  | StaticValueAggregator {\n  switch (aggregateType) {\n    case \"Average\":\n      return new AverageAggregator();\n    case \"Count\":\n    case \"CountIf\":\n      return new CountAggregator();\n    case \"Max\":\n      return new MaxAggregator();\n    case \"Min\":\n      return new MinAggregator();\n    case \"Sum\":\n      return new SumAggregator();\n    case \"MakeList\":\n      return new MakeListAggregator();\n    case \"MakeSet\":\n      return new MakeSetAggregator();\n    default:\n      return new StaticValueAggregator();\n  }\n}\n\nexport { AverageAggregator, CountAggregator, MaxAggregator, MinAggregator, SumAggregator };\nexport { Aggregator } from \"./Aggregator.js\";\n"]}