{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/generated/models/index.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\n\nexport type OperationDetailsUnion =\n  | OperationDetails\n  | DocumentModelBuildOperationDetails\n  | DocumentModelComposeOperationDetails\n  | DocumentModelCopyToOperationDetails;\n\n/** Document analysis parameters. */\nexport interface AnalyzeDocumentRequest {\n  /** Document URL to analyze */\n  urlSource?: string;\n  /** Base64 encoding of the document to analyze */\n  base64Source?: Uint8Array;\n}\n\n/** Error response object. */\nexport interface ErrorResponse {\n  /** Error info. */\n  error: ErrorModel;\n}\n\n/** Error info. */\nexport interface ErrorModel {\n  /** Error code. */\n  code: string;\n  /** Error message. */\n  message: string;\n  /** Target of the error. */\n  target?: string;\n  /** List of detailed errors. */\n  details?: ErrorModel[];\n  /** Detailed error. */\n  innererror?: InnerError;\n}\n\n/** Detailed error. */\nexport interface InnerError {\n  /** Error code. */\n  code: string;\n  /** Error message. */\n  message?: string;\n  /** Detailed error. */\n  innererror?: InnerError;\n}\n\n/** Status and result of the analyze operation. */\nexport interface AnalyzeResultOperation {\n  /** Operation status. */\n  status: AnalyzeResultOperationStatus;\n  /** Date and time (UTC) when the analyze operation was submitted. */\n  createdOn: Date;\n  /** Date and time (UTC) when the status was last updated. */\n  lastUpdatedOn: Date;\n  /** Encountered error during document analysis. */\n  error?: ErrorModel;\n  /** Document analysis result. */\n  analyzeResult?: AnalyzeResult;\n}\n\n/** Document analysis result. */\nexport interface AnalyzeResult {\n  /** API version used to produce this result. */\n  apiVersion: ApiVersion;\n  /** Document model ID used to produce this result. */\n  modelId: string;\n  /** Method used to compute string offset and length. */\n  stringIndexType: StringIndexType;\n  /** Concatenate string representation of all textual and visual elements in reading order. */\n  content: string;\n  /** Analyzed pages. */\n  pages: DocumentPage[];\n  /** Extracted paragraphs. */\n  paragraphs?: DocumentParagraph[];\n  /** Extracted tables. */\n  tables?: DocumentTable[];\n  /** Extracted key-value pairs. */\n  keyValuePairs?: DocumentKeyValuePair[];\n  /** Extracted font styles. */\n  styles?: DocumentStyle[];\n  /** Detected languages. */\n  languages?: DocumentLanguage[];\n  /** Extracted documents. */\n  documents?: Document[];\n}\n\n/** Content and layout elements extracted from a page from the input. */\nexport interface DocumentPage {\n  /** 1-based page number in the input document. */\n  pageNumber: number;\n  /** The general orientation of the content in clockwise direction, measured in degrees between (-180, 180]. */\n  angle?: number;\n  /** The width of the image/PDF in pixels/inches, respectively. */\n  width?: number;\n  /** The height of the image/PDF in pixels/inches, respectively. */\n  height?: number;\n  /** The unit used by the width, height, and polygon properties. For images, the unit is \"pixel\". For PDF, the unit is \"inch\". */\n  unit?: LengthUnit;\n  /** Location of the page in the reading order concatenated content. */\n  spans: DocumentSpan[];\n  /** Extracted words from the page. */\n  words?: DocumentWord[];\n  /** Extracted selection marks from the page. */\n  selectionMarks?: DocumentSelectionMark[];\n  /** Extracted lines from the page, potentially containing both textual and visual elements. */\n  lines?: DocumentLine[];\n}\n\n/** Contiguous region of the concatenated content property, specified as an offset and length. */\nexport interface DocumentSpan {\n  /** Zero-based index of the content represented by the span. */\n  offset: number;\n  /** Number of characters in the content represented by the span. */\n  length: number;\n}\n\n/** A word object consisting of a contiguous sequence of characters.  For non-space delimited languages, such as Chinese, Japanese, and Korean, each character is represented as its own word. */\nexport interface DocumentWord {\n  /** Text content of the word. */\n  content: string;\n  /** Bounding polygon of the word. */\n  polygon?: number[];\n  /** Location of the word in the reading order concatenated content. */\n  span: DocumentSpan;\n  /** Confidence of correctly extracting the word. */\n  confidence: number;\n}\n\n/** A selection mark object representing check boxes, radio buttons, and other elements indicating a selection. */\nexport interface DocumentSelectionMark {\n  /** State of the selection mark. */\n  state: SelectionMarkState;\n  /** Bounding polygon of the selection mark. */\n  polygon?: number[];\n  /** Location of the selection mark in the reading order concatenated content. */\n  span: DocumentSpan;\n  /** Confidence of correctly extracting the selection mark. */\n  confidence: number;\n}\n\n/** A content line object consisting of an adjacent sequence of content elements, such as words and selection marks. */\nexport interface DocumentLine {\n  /** Concatenated content of the contained elements in reading order. */\n  content: string;\n  /** Bounding polygon of the line. */\n  polygon?: number[];\n  /** Location of the line in the reading order concatenated content. */\n  spans: DocumentSpan[];\n}\n\n/** A paragraph object consisting with contiguous lines generally with common alignment and spacing. */\nexport interface DocumentParagraph {\n  /** Semantic role of the paragraph. */\n  role?: ParagraphRole;\n  /** Concatenated content of the paragraph in reading order. */\n  content: string;\n  /** Bounding regions covering the paragraph. */\n  boundingRegions?: BoundingRegion[];\n  /** Location of the paragraph in the reading order concatenated content. */\n  spans: DocumentSpan[];\n}\n\n/** Bounding polygon on a specific page of the input. */\nexport interface BoundingRegion {\n  /** 1-based page number of page containing the bounding region. */\n  pageNumber: number;\n  /** Bounding polygon on the page, or the entire page if not specified. */\n  polygon: number[];\n}\n\n/** A table object consisting table cells arranged in a rectangular layout. */\nexport interface DocumentTable {\n  /** Number of rows in the table. */\n  rowCount: number;\n  /** Number of columns in the table. */\n  columnCount: number;\n  /** Cells contained within the table. */\n  cells: DocumentTableCell[];\n  /** Bounding regions covering the table. */\n  boundingRegions?: BoundingRegion[];\n  /** Location of the table in the reading order concatenated content. */\n  spans: DocumentSpan[];\n}\n\n/** An object representing the location and content of a table cell. */\nexport interface DocumentTableCell {\n  /** Table cell kind. */\n  kind?: DocumentTableCellKind;\n  /** Row index of the cell. */\n  rowIndex: number;\n  /** Column index of the cell. */\n  columnIndex: number;\n  /** Number of rows spanned by this cell. */\n  rowSpan?: number;\n  /** Number of columns spanned by this cell. */\n  columnSpan?: number;\n  /** Concatenated content of the table cell in reading order. */\n  content: string;\n  /** Bounding regions covering the table cell. */\n  boundingRegions?: BoundingRegion[];\n  /** Location of the table cell in the reading order concatenated content. */\n  spans: DocumentSpan[];\n}\n\n/** An object representing a form field with distinct field label (key) and field value (may be empty). */\nexport interface DocumentKeyValuePair {\n  /** Field label of the key-value pair. */\n  key: DocumentKeyValueElement;\n  /** Field value of the key-value pair. */\n  value?: DocumentKeyValueElement;\n  /** Confidence of correctly extracting the key-value pair. */\n  confidence: number;\n}\n\n/** An object representing the field key or value in a key-value pair. */\nexport interface DocumentKeyValueElement {\n  /** Concatenated content of the key-value element in reading order. */\n  content: string;\n  /** Bounding regions covering the key-value element. */\n  boundingRegions?: BoundingRegion[];\n  /** Location of the key-value element in the reading order concatenated content. */\n  spans: DocumentSpan[];\n}\n\n/** An object representing observed text styles. */\nexport interface DocumentStyle {\n  /** Is content handwritten? */\n  isHandwritten?: boolean;\n  /** Location of the text elements in the concatenated content the style applies to. */\n  spans: DocumentSpan[];\n  /** Confidence of correctly identifying the style. */\n  confidence: number;\n}\n\n/** An object representing the detected language for a given text span. */\nexport interface DocumentLanguage {\n  /** Detected language.  Value may an ISO 639-1 language code (ex. \"en\", \"fr\") or BCP 47 language tag (ex. \"zh-Hans\"). */\n  locale: string;\n  /** Location of the text elements in the concatenated content the language applies to. */\n  spans: DocumentSpan[];\n  /** Confidence of correctly identifying the language. */\n  confidence: number;\n}\n\n/** An object describing the location and semantic content of a document. */\nexport interface Document {\n  /** Document type. */\n  docType: string;\n  /** Bounding regions covering the document. */\n  boundingRegions?: BoundingRegion[];\n  /** Location of the document in the reading order concatenated content. */\n  spans: DocumentSpan[];\n  /** Dictionary of named field values. */\n  fields?: { [propertyName: string]: DocumentField };\n  /** Confidence of correctly extracting the document. */\n  confidence: number;\n}\n\n/** An object representing the content and location of a field value. */\nexport interface DocumentField {\n  /** Data type of the field value. */\n  type: DocumentFieldType;\n  /** String value. */\n  valueString?: string;\n  /** Date value in YYYY-MM-DD format (ISO 8601). */\n  valueDate?: Date;\n  /**\n   * Time value in hh:mm:ss format (ISO 8601).\n   * This value should be an ISO-8601 formatted string representing time. E.g. \"HH:MM:SS\" or \"HH:MM:SS.mm\".\n   */\n  valueTime?: string;\n  /** Phone number value in E.164 format (ex. +19876543210). */\n  valuePhoneNumber?: string;\n  /** Floating point value. */\n  valueNumber?: number;\n  /** Integer value. */\n  valueInteger?: number;\n  /** Selection mark value. */\n  valueSelectionMark?: SelectionMarkState;\n  /** Presence of signature. */\n  valueSignature?: DocumentSignatureType;\n  /** 3-letter country code value (ISO 3166-1 alpha-3). */\n  valueCountryRegion?: string;\n  /** Array of field values. */\n  valueArray?: DocumentField[];\n  /** Dictionary of named field values. */\n  valueObject?: { [propertyName: string]: DocumentField };\n  /** Currency value. */\n  valueCurrency?: CurrencyValue;\n  /** Address value. */\n  valueAddress?: AddressValue;\n  /** Field content. */\n  content?: string;\n  /** Bounding regions covering the field. */\n  boundingRegions?: BoundingRegion[];\n  /** Location of the field in the reading order concatenated content. */\n  spans?: DocumentSpan[];\n  /** Confidence of correctly extracting the field. */\n  confidence?: number;\n}\n\n/** Currency field value. */\nexport interface CurrencyValue {\n  /** Currency amount. */\n  amount: number;\n  /** Currency symbol label, if any. */\n  currencySymbol?: string;\n}\n\n/** Address field value. */\nexport interface AddressValue {\n  /** House or building number. */\n  houseNumber?: string;\n  /** Post office box number. */\n  poBox?: string;\n  /** Street name. */\n  road?: string;\n  /** Name of city, town, village, etc. */\n  city?: string;\n  /** First-level administrative division. */\n  state?: string;\n  /** Postal code used for mail sorting. */\n  postalCode?: string;\n  /** Country/region. */\n  countryRegion?: string;\n  /** Street-level address, excluding city, state, countryRegion, and postalCode. */\n  streetAddress?: string;\n}\n\n/** Request body to build a new custom document model. */\nexport interface BuildDocumentModelRequest {\n  /** Unique document model name. */\n  modelId: string;\n  /** Document model description. */\n  description?: string;\n  /** Custom document model build mode. */\n  buildMode: DocumentBuildMode;\n  /** Azure Blob Storage location containing the training data. */\n  azureBlobSource?: AzureBlobContentSource;\n  /** List of key-value tag attributes associated with the document model. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Azure Blob Storage content. */\nexport interface AzureBlobContentSource {\n  /** Azure Blob Storage container URL. */\n  containerUrl: string;\n  /** Blob name prefix. */\n  prefix?: string;\n}\n\n/** Request body to create a composed document model from component document models. */\nexport interface ComposeDocumentModelRequest {\n  /** Unique document model name. */\n  modelId: string;\n  /** Document model description. */\n  description?: string;\n  /** List of component document models to compose. */\n  componentModels: ComponentDocumentModelDetails[];\n  /** List of key-value tag attributes associated with the document model. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** A component of a composed document model. */\nexport interface ComponentDocumentModelDetails {\n  /** Unique document model name. */\n  modelId: string;\n}\n\n/** Request body to authorize document model copy. */\nexport interface AuthorizeCopyRequest {\n  /** Unique document model name. */\n  modelId: string;\n  /** Document model description. */\n  description?: string;\n  /** List of key-value tag attributes associated with the document model. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Authorization to copy a document model to the specified target resource and modelId. */\nexport interface CopyAuthorization {\n  /** ID of the target Azure resource where the document model should be copied to. */\n  targetResourceId: string;\n  /** Location of the target Azure resource where the document model should be copied to. */\n  targetResourceRegion: string;\n  /** Identifier of the target document model. */\n  targetModelId: string;\n  /** URL of the copied document model in the target account. */\n  targetModelLocation: string;\n  /** Token used to authorize the request. */\n  accessToken: string;\n  /** Date/time when the access token expires. */\n  expirationDateTime: Date;\n}\n\n/** List Operations response object. */\nexport interface GetOperationsResponse {\n  /** List of operations. */\n  value: OperationSummary[];\n  /** Link to the next page of operations. */\n  nextLink?: string;\n}\n\n/** Operation info. */\nexport interface OperationSummary {\n  /** Operation ID */\n  operationId: string;\n  /** Operation status. */\n  status: OperationStatus;\n  /** Operation progress (0-100). */\n  percentCompleted?: number;\n  /** Date and time (UTC) when the operation was created. */\n  createdOn: Date;\n  /** Date and time (UTC) when the status was last updated. */\n  lastUpdatedOn: Date;\n  /** Type of operation. */\n  kind: OperationKind;\n  /** URL of the resource targeted by this operation. */\n  resourceLocation: string;\n  /** API version used to create this operation. */\n  apiVersion?: string;\n  /** List of key-value tag attributes associated with the document model. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Get Operation response object. */\nexport interface OperationDetails {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"documentModelBuild\" | \"documentModelCompose\" | \"documentModelCopyTo\";\n  /** Operation ID */\n  operationId: string;\n  /** Operation status. */\n  status: OperationStatus;\n  /** Operation progress (0-100). */\n  percentCompleted?: number;\n  /** Date and time (UTC) when the operation was created. */\n  createdOn: Date;\n  /** Date and time (UTC) when the status was last updated. */\n  lastUpdatedOn: Date;\n  /** URL of the resource targeted by this operation. */\n  resourceLocation: string;\n  /** API version used to create this operation. */\n  apiVersion?: string;\n  /** List of key-value tag attributes associated with the document model. */\n  tags?: { [propertyName: string]: string };\n  /** Encountered error. */\n  error?: ErrorModel;\n}\n\n/** List document models response object. */\nexport interface GetDocumentModelsResponse {\n  /** List of document models. */\n  value: DocumentModelSummary[];\n  /** Link to the next page of document models. */\n  nextLink?: string;\n}\n\n/** Document model summary. */\nexport interface DocumentModelSummary {\n  /** Unique document model name. */\n  modelId: string;\n  /** Document model description. */\n  description?: string;\n  /** Date and time (UTC) when the document model was created. */\n  createdOn: Date;\n  /** API version used to create this document model. */\n  apiVersion?: string;\n  /** List of key-value tag attributes associated with the document model. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Document model info. */\nexport interface DocumentModelDetails {\n  /** Unique document model name. */\n  modelId: string;\n  /** Document model description. */\n  description?: string;\n  /** Date and time (UTC) when the document model was created. */\n  createdOn: Date;\n  /** API version used to create this document model. */\n  apiVersion?: string;\n  /** List of key-value tag attributes associated with the document model. */\n  tags?: { [propertyName: string]: string };\n  /** Supported document types. */\n  docTypes?: { [propertyName: string]: DocumentTypeDetails };\n}\n\n/** Document type info. */\nexport interface DocumentTypeDetails {\n  /** Document model description. */\n  description?: string;\n  /** Custom document model build mode. */\n  buildMode?: DocumentBuildMode;\n  /** Description of the document semantic schema using a JSON Schema style syntax. */\n  fieldSchema: { [propertyName: string]: DocumentFieldSchema };\n  /** Estimated confidence for each field. */\n  fieldConfidence?: { [propertyName: string]: number };\n}\n\n/** Description of the field semantic schema using a JSON Schema style syntax. */\nexport interface DocumentFieldSchema {\n  /** Semantic data type of the field value. */\n  type: DocumentFieldType;\n  /** Field description. */\n  description?: string;\n  /** Example field content. */\n  example?: string;\n  /** Field type schema of each array element. */\n  items?: DocumentFieldSchema;\n  /** Named sub-fields of the object field. */\n  properties?: { [propertyName: string]: DocumentFieldSchema };\n}\n\n/** General information regarding the current resource. */\nexport interface ResourceDetails {\n  /** Details regarding custom document models. */\n  customDocumentModels: CustomDocumentModelsDetails;\n}\n\n/** Details regarding custom document models. */\nexport interface CustomDocumentModelsDetails {\n  /** Number of custom document models in the current resource. */\n  count: number;\n  /** Maximum number of custom document models supported in the current resource. */\n  limit: number;\n}\n\n/** Get Operation response object. */\nexport interface DocumentModelBuildOperationDetails extends OperationDetails {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"documentModelBuild\";\n  /** Operation result upon success. */\n  result?: DocumentModelDetails;\n}\n\n/** Get Operation response object. */\nexport interface DocumentModelComposeOperationDetails extends OperationDetails {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"documentModelCompose\";\n  /** Operation result upon success. */\n  result?: DocumentModelDetails;\n}\n\n/** Get Operation response object. */\nexport interface DocumentModelCopyToOperationDetails extends OperationDetails {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"documentModelCopyTo\";\n  /** Operation result upon success. */\n  result?: DocumentModelDetails;\n}\n\n/** Defines headers for GeneratedClient_analyzeDocument operation. */\nexport interface GeneratedClientAnalyzeDocumentHeaders {\n  /** URL used to track the progress and obtain the result of the analyze operation. */\n  operationLocation?: string;\n}\n\n/** Defines headers for GeneratedClient_buildDocumentModel operation. */\nexport interface GeneratedClientBuildDocumentModelHeaders {\n  /** Operation result URL. */\n  operationLocation?: string;\n}\n\n/** Defines headers for GeneratedClient_composeDocumentModel operation. */\nexport interface GeneratedClientComposeDocumentModelHeaders {\n  /** Operation result URL. */\n  operationLocation?: string;\n}\n\n/** Defines headers for GeneratedClient_copyDocumentModelTo operation. */\nexport interface GeneratedClientCopyDocumentModelToHeaders {\n  /** Operation result URL. */\n  operationLocation?: string;\n}\n\n/** Known values of {@link StringIndexType} that the service accepts. */\nexport enum KnownStringIndexType {\n  /** TextElements */\n  TextElements = \"textElements\",\n  /** UnicodeCodePoint */\n  UnicodeCodePoint = \"unicodeCodePoint\",\n  /** Utf16CodeUnit */\n  Utf16CodeUnit = \"utf16CodeUnit\"\n}\n\n/**\n * Defines values for StringIndexType. \\\n * {@link KnownStringIndexType} can be used interchangeably with StringIndexType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **textElements** \\\n * **unicodeCodePoint** \\\n * **utf16CodeUnit**\n */\nexport type StringIndexType = string;\n\n/** Known values of {@link ApiVersion} that the service accepts. */\nexport enum KnownApiVersion {\n  /** TwoThousandTwentyTwo0831 */\n  TwoThousandTwentyTwo0831 = \"2022-08-31\"\n}\n\n/**\n * Defines values for ApiVersion. \\\n * {@link KnownApiVersion} can be used interchangeably with ApiVersion,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **2022-08-31**\n */\nexport type ApiVersion = string;\n\n/** Known values of {@link LengthUnit} that the service accepts. */\nexport enum KnownLengthUnit {\n  /** Pixel */\n  Pixel = \"pixel\",\n  /** Inch */\n  Inch = \"inch\"\n}\n\n/**\n * Defines values for LengthUnit. \\\n * {@link KnownLengthUnit} can be used interchangeably with LengthUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **pixel** \\\n * **inch**\n */\nexport type LengthUnit = string;\n\n/** Known values of {@link SelectionMarkState} that the service accepts. */\nexport enum KnownSelectionMarkState {\n  /** Selected */\n  Selected = \"selected\",\n  /** Unselected */\n  Unselected = \"unselected\"\n}\n\n/**\n * Defines values for SelectionMarkState. \\\n * {@link KnownSelectionMarkState} can be used interchangeably with SelectionMarkState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **selected** \\\n * **unselected**\n */\nexport type SelectionMarkState = string;\n\n/** Known values of {@link ParagraphRole} that the service accepts. */\nexport enum KnownParagraphRole {\n  /** PageHeader */\n  PageHeader = \"pageHeader\",\n  /** PageFooter */\n  PageFooter = \"pageFooter\",\n  /** PageNumber */\n  PageNumber = \"pageNumber\",\n  /** Title */\n  Title = \"title\",\n  /** SectionHeading */\n  SectionHeading = \"sectionHeading\",\n  /** Footnote */\n  Footnote = \"footnote\"\n}\n\n/**\n * Defines values for ParagraphRole. \\\n * {@link KnownParagraphRole} can be used interchangeably with ParagraphRole,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **pageHeader** \\\n * **pageFooter** \\\n * **pageNumber** \\\n * **title** \\\n * **sectionHeading** \\\n * **footnote**\n */\nexport type ParagraphRole = string;\n\n/** Known values of {@link DocumentTableCellKind} that the service accepts. */\nexport enum KnownDocumentTableCellKind {\n  /** Content */\n  Content = \"content\",\n  /** RowHeader */\n  RowHeader = \"rowHeader\",\n  /** ColumnHeader */\n  ColumnHeader = \"columnHeader\",\n  /** StubHead */\n  StubHead = \"stubHead\",\n  /** Description */\n  Description = \"description\"\n}\n\n/**\n * Defines values for DocumentTableCellKind. \\\n * {@link KnownDocumentTableCellKind} can be used interchangeably with DocumentTableCellKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **content** \\\n * **rowHeader** \\\n * **columnHeader** \\\n * **stubHead** \\\n * **description**\n */\nexport type DocumentTableCellKind = string;\n\n/** Known values of {@link DocumentFieldType} that the service accepts. */\nexport enum KnownDocumentFieldType {\n  /** String */\n  String = \"string\",\n  /** Date */\n  Date = \"date\",\n  /** Time */\n  Time = \"time\",\n  /** PhoneNumber */\n  PhoneNumber = \"phoneNumber\",\n  /** Number */\n  Number = \"number\",\n  /** Integer */\n  Integer = \"integer\",\n  /** SelectionMark */\n  SelectionMark = \"selectionMark\",\n  /** CountryRegion */\n  CountryRegion = \"countryRegion\",\n  /** Signature */\n  Signature = \"signature\",\n  /** Array */\n  Array = \"array\",\n  /** Object */\n  Object = \"object\",\n  /** Currency */\n  Currency = \"currency\",\n  /** Address */\n  Address = \"address\"\n}\n\n/**\n * Defines values for DocumentFieldType. \\\n * {@link KnownDocumentFieldType} can be used interchangeably with DocumentFieldType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **string** \\\n * **date** \\\n * **time** \\\n * **phoneNumber** \\\n * **number** \\\n * **integer** \\\n * **selectionMark** \\\n * **countryRegion** \\\n * **signature** \\\n * **array** \\\n * **object** \\\n * **currency** \\\n * **address**\n */\nexport type DocumentFieldType = string;\n\n/** Known values of {@link DocumentSignatureType} that the service accepts. */\nexport enum KnownDocumentSignatureType {\n  /** Signed */\n  Signed = \"signed\",\n  /** Unsigned */\n  Unsigned = \"unsigned\"\n}\n\n/**\n * Defines values for DocumentSignatureType. \\\n * {@link KnownDocumentSignatureType} can be used interchangeably with DocumentSignatureType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **signed** \\\n * **unsigned**\n */\nexport type DocumentSignatureType = string;\n\n/** Known values of {@link DocumentBuildMode} that the service accepts. */\nexport enum KnownDocumentBuildMode {\n  /** Template */\n  Template = \"template\",\n  /** Neural */\n  Neural = \"neural\"\n}\n\n/**\n * Defines values for DocumentBuildMode. \\\n * {@link KnownDocumentBuildMode} can be used interchangeably with DocumentBuildMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **template** \\\n * **neural**\n */\nexport type DocumentBuildMode = string;\n\n/** Known values of {@link OperationKind} that the service accepts. */\nexport enum KnownOperationKind {\n  /** DocumentModelBuild */\n  DocumentModelBuild = \"documentModelBuild\",\n  /** DocumentModelCompose */\n  DocumentModelCompose = \"documentModelCompose\",\n  /** DocumentModelCopyTo */\n  DocumentModelCopyTo = \"documentModelCopyTo\"\n}\n\n/**\n * Defines values for OperationKind. \\\n * {@link KnownOperationKind} can be used interchangeably with OperationKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **documentModelBuild** \\\n * **documentModelCompose** \\\n * **documentModelCopyTo**\n */\nexport type OperationKind = string;\n/** Defines values for ContentType. */\nexport type ContentType =\n  | \"application/octet-stream\"\n  | \"application/pdf\"\n  | \"image/bmp\"\n  | \"image/heif\"\n  | \"image/jpeg\"\n  | \"image/png\"\n  | \"image/tiff\";\n/** Defines values for AnalyzeResultOperationStatus. */\nexport type AnalyzeResultOperationStatus =\n  | \"notStarted\"\n  | \"running\"\n  | \"failed\"\n  | \"succeeded\";\n/** Defines values for OperationStatus. */\nexport type OperationStatus =\n  | \"notStarted\"\n  | \"running\"\n  | \"failed\"\n  | \"succeeded\"\n  | \"canceled\";\n\n/** Optional parameters. */\nexport interface AnalyzeDocument$binaryOptionalParams\n  extends coreClient.OperationOptions {\n  /** Analyze request parameters. */\n  analyzeRequest?: coreRestPipeline.RequestBodyType;\n  /** List of 1-based page numbers to analyze.  Ex. \"1-3,5,7-9\" */\n  pages?: string;\n  /** Locale hint for text recognition and document analysis.  Value may contain only the language code (ex. \"en\", \"fr\") or BCP 47 language tag (ex. \"en-US\"). */\n  locale?: string;\n}\n\n/** Optional parameters. */\nexport interface AnalyzeDocument$jsonOptionalParams\n  extends coreClient.OperationOptions {\n  /** Analyze request parameters. */\n  analyzeRequest?: AnalyzeDocumentRequest;\n  /** List of 1-based page numbers to analyze.  Ex. \"1-3,5,7-9\" */\n  pages?: string;\n  /** Locale hint for text recognition and document analysis.  Value may contain only the language code (ex. \"en\", \"fr\") or BCP 47 language tag (ex. \"en-US\"). */\n  locale?: string;\n}\n\n/** Contains response data for the analyzeDocument operation. */\nexport type AnalyzeDocumentResponse = GeneratedClientAnalyzeDocumentHeaders;\n\n/** Optional parameters. */\nexport interface GetAnalyzeDocumentResultOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAnalyzeDocumentResult operation. */\nexport type GetAnalyzeDocumentResultResponse = AnalyzeResultOperation;\n\n/** Optional parameters. */\nexport interface BuildDocumentModelOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the buildDocumentModel operation. */\nexport type BuildDocumentModelResponse = GeneratedClientBuildDocumentModelHeaders;\n\n/** Optional parameters. */\nexport interface ComposeDocumentModelOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the composeDocumentModel operation. */\nexport type ComposeDocumentModelResponse = GeneratedClientComposeDocumentModelHeaders;\n\n/** Optional parameters. */\nexport interface AuthorizeCopyDocumentModelOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the authorizeCopyDocumentModel operation. */\nexport type AuthorizeCopyDocumentModelResponse = CopyAuthorization;\n\n/** Optional parameters. */\nexport interface CopyDocumentModelToOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the copyDocumentModelTo operation. */\nexport type CopyDocumentModelToResponse = GeneratedClientCopyDocumentModelToHeaders;\n\n/** Optional parameters. */\nexport interface GetOperationsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getOperations operation. */\nexport type GetOperationsOperationResponse = GetOperationsResponse;\n\n/** Optional parameters. */\nexport interface GetOperationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getOperation operation. */\nexport type GetOperationResponse = OperationDetailsUnion;\n\n/** Optional parameters. */\nexport interface GetDocumentModelsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getDocumentModels operation. */\nexport type GetDocumentModelsOperationResponse = GetDocumentModelsResponse;\n\n/** Optional parameters. */\nexport interface GetDocumentModelOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getDocumentModel operation. */\nexport type GetDocumentModelResponse = DocumentModelDetails;\n\n/** Optional parameters. */\nexport interface DeleteDocumentModelOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface GetResourceDetailsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getResourceDetails operation. */\nexport type GetResourceDetailsResponse = ResourceDetails;\n\n/** Optional parameters. */\nexport interface GetOperationsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getOperationsNext operation. */\nexport type GetOperationsNextResponse = GetOperationsResponse;\n\n/** Optional parameters. */\nexport interface GetDocumentModelsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getDocumentModelsNext operation. */\nexport type GetDocumentModelsNextResponse = GetDocumentModelsResponse;\n\n/** Optional parameters. */\nexport interface GeneratedClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** Method used to compute string offset and length. */\n  stringIndexType?: StringIndexType;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"]}