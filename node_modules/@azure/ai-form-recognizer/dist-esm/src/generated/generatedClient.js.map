{"version":3,"file":"generatedClient.js","sourceRoot":"","sources":["../../../src/generated/generatedClient.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  StringIndexType,\n  GeneratedClientOptionalParams,\n  OperationSummary,\n  GetOperationsNextOptionalParams,\n  GetOperationsOptionalParams,\n  DocumentModelSummary,\n  GetDocumentModelsNextOptionalParams,\n  GetDocumentModelsOptionalParams,\n  ContentType,\n  AnalyzeDocument$binaryOptionalParams,\n  AnalyzeDocument$jsonOptionalParams,\n  AnalyzeDocumentResponse,\n  GetAnalyzeDocumentResultOptionalParams,\n  GetAnalyzeDocumentResultResponse,\n  BuildDocumentModelRequest,\n  BuildDocumentModelOptionalParams,\n  BuildDocumentModelResponse,\n  ComposeDocumentModelRequest,\n  ComposeDocumentModelOptionalParams,\n  ComposeDocumentModelResponse,\n  AuthorizeCopyRequest,\n  AuthorizeCopyDocumentModelOptionalParams,\n  AuthorizeCopyDocumentModelResponse,\n  CopyAuthorization,\n  CopyDocumentModelToOptionalParams,\n  CopyDocumentModelToResponse,\n  GetOperationsOperationResponse,\n  GetOperationOptionalParams,\n  GetOperationResponse,\n  GetDocumentModelsOperationResponse,\n  GetDocumentModelOptionalParams,\n  GetDocumentModelResponse,\n  DeleteDocumentModelOptionalParams,\n  GetResourceDetailsOptionalParams,\n  GetResourceDetailsResponse,\n  GetOperationsNextResponse,\n  GetDocumentModelsNextResponse\n} from \"./models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\nexport class GeneratedClient extends coreClient.ServiceClient {\n  endpoint: string;\n  stringIndexType?: StringIndexType;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the GeneratedClient class.\n   * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for\n   *                 example: https://westus2.api.cognitive.microsoft.com).\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: GeneratedClientOptionalParams) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: GeneratedClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-ai-form-recognizer/4.0.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri:\n        options.endpoint ?? options.baseUri ?? \"{endpoint}/formrecognizer\"\n    };\n    super(optionsWithDefaults);\n\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      const bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n      if (!bearerTokenAuthenticationPolicyFound) {\n        this.pipeline.removePolicy({\n          name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n        });\n        this.pipeline.addPolicy(\n          coreRestPipeline.bearerTokenAuthenticationPolicy({\n            scopes: `${optionsWithDefaults.baseUri}/.default`,\n            challengeCallbacks: {\n              authorizeRequestOnChallenge:\n                coreClient.authorizeRequestOnClaimChallenge\n            }\n          })\n        );\n      }\n    }\n    // Parameter assignments\n    this.endpoint = endpoint;\n\n    // Assigning values to Constant parameters\n    this.apiVersion = options.apiVersion || \"2022-08-31\";\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  /**\n   * Lists all operations.\n   * @param options The options parameters.\n   */\n  public listOperations(\n    options?: GetOperationsOptionalParams\n  ): PagedAsyncIterableIterator<OperationSummary> {\n    const iter = this.getOperationsPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.getOperationsPagingPage(options);\n      }\n    };\n  }\n\n  private async *getOperationsPagingPage(\n    options?: GetOperationsOptionalParams\n  ): AsyncIterableIterator<OperationSummary[]> {\n    let result = await this._getOperations(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._getOperationsNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *getOperationsPagingAll(\n    options?: GetOperationsOptionalParams\n  ): AsyncIterableIterator<OperationSummary> {\n    for await (const page of this.getOperationsPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all document models\n   * @param options The options parameters.\n   */\n  public listDocumentModels(\n    options?: GetDocumentModelsOptionalParams\n  ): PagedAsyncIterableIterator<DocumentModelSummary> {\n    const iter = this.getDocumentModelsPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.getDocumentModelsPagingPage(options);\n      }\n    };\n  }\n\n  private async *getDocumentModelsPagingPage(\n    options?: GetDocumentModelsOptionalParams\n  ): AsyncIterableIterator<DocumentModelSummary[]> {\n    let result = await this._getDocumentModels(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._getDocumentModelsNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *getDocumentModelsPagingAll(\n    options?: GetDocumentModelsOptionalParams\n  ): AsyncIterableIterator<DocumentModelSummary> {\n    for await (const page of this.getDocumentModelsPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Analyzes document with document model.\n   * @param modelId Unique document model name.\n   * @param contentType Upload file type\n   * @param options The options parameters.\n   */\n  analyzeDocument(\n    modelId: string,\n    contentType: ContentType,\n    options?: AnalyzeDocument$binaryOptionalParams\n  ): Promise<AnalyzeDocumentResponse>;\n  /**\n   * Analyzes document with document model.\n   * @param modelId Unique document model name.\n   * @param contentType Body Parameter content-type\n   * @param options The options parameters.\n   */\n  analyzeDocument(\n    modelId: string,\n    contentType: \"application/json\",\n    options?: AnalyzeDocument$jsonOptionalParams\n  ): Promise<AnalyzeDocumentResponse>;\n  /**\n   * Analyzes document with document model.\n   * @param args Includes all the parameters for this operation.\n   */\n  analyzeDocument(\n    ...args:\n      | [string, ContentType, AnalyzeDocument$binaryOptionalParams?]\n      | [string, \"application/json\", AnalyzeDocument$jsonOptionalParams?]\n  ): Promise<AnalyzeDocumentResponse> {\n    let operationSpec: coreClient.OperationSpec;\n    let operationArguments: coreClient.OperationArguments;\n    let options;\n    if (\n      args[1] === \"application/octet-stream\" ||\n      args[1] === \"application/pdf\" ||\n      args[1] === \"image/bmp\" ||\n      args[1] === \"image/heif\" ||\n      args[1] === \"image/jpeg\" ||\n      args[1] === \"image/png\" ||\n      args[1] === \"image/tiff\"\n    ) {\n      operationSpec = analyzeDocument$binaryOperationSpec;\n      operationArguments = {\n        modelId: args[0],\n        contentType: args[1],\n        options: args[2]\n      };\n      options = args[2];\n    } else if (args[1] === \"application/json\") {\n      operationSpec = analyzeDocument$jsonOperationSpec;\n      operationArguments = {\n        modelId: args[0],\n        contentType: args[1],\n        options: args[2]\n      };\n      options = args[2];\n    } else {\n      throw new TypeError(\n        `\"contentType\" must be a valid value but instead was \"${args[1]}\".`\n      );\n    }\n    operationArguments.options = options || {};\n    return this.sendOperationRequest(operationArguments, operationSpec);\n  }\n\n  /**\n   * Gets the result of document analysis.\n   * @param modelId Unique document model name.\n   * @param resultId Analyze operation result ID.\n   * @param options The options parameters.\n   */\n  getAnalyzeDocumentResult(\n    modelId: string,\n    resultId: string,\n    options?: GetAnalyzeDocumentResultOptionalParams\n  ): Promise<GetAnalyzeDocumentResultResponse> {\n    return this.sendOperationRequest(\n      { modelId, resultId, options },\n      getAnalyzeDocumentResultOperationSpec\n    );\n  }\n\n  /**\n   * Builds a custom document analysis model.\n   * @param buildRequest Building request parameters.\n   * @param options The options parameters.\n   */\n  buildDocumentModel(\n    buildRequest: BuildDocumentModelRequest,\n    options?: BuildDocumentModelOptionalParams\n  ): Promise<BuildDocumentModelResponse> {\n    return this.sendOperationRequest(\n      { buildRequest, options },\n      buildDocumentModelOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new document model from document types of existing document models.\n   * @param composeRequest Compose request parameters.\n   * @param options The options parameters.\n   */\n  composeDocumentModel(\n    composeRequest: ComposeDocumentModelRequest,\n    options?: ComposeDocumentModelOptionalParams\n  ): Promise<ComposeDocumentModelResponse> {\n    return this.sendOperationRequest(\n      { composeRequest, options },\n      composeDocumentModelOperationSpec\n    );\n  }\n\n  /**\n   * Generates authorization to copy a document model to this location with specified modelId and\n   * optional description.\n   * @param authorizeCopyRequest Authorize copy request parameters.\n   * @param options The options parameters.\n   */\n  authorizeCopyDocumentModel(\n    authorizeCopyRequest: AuthorizeCopyRequest,\n    options?: AuthorizeCopyDocumentModelOptionalParams\n  ): Promise<AuthorizeCopyDocumentModelResponse> {\n    return this.sendOperationRequest(\n      { authorizeCopyRequest, options },\n      authorizeCopyDocumentModelOperationSpec\n    );\n  }\n\n  /**\n   * Copies document model to the target resource, region, and modelId.\n   * @param modelId Unique document model name.\n   * @param copyToRequest Copy to request parameters.\n   * @param options The options parameters.\n   */\n  copyDocumentModelTo(\n    modelId: string,\n    copyToRequest: CopyAuthorization,\n    options?: CopyDocumentModelToOptionalParams\n  ): Promise<CopyDocumentModelToResponse> {\n    return this.sendOperationRequest(\n      { modelId, copyToRequest, options },\n      copyDocumentModelToOperationSpec\n    );\n  }\n\n  /**\n   * Lists all operations.\n   * @param options The options parameters.\n   */\n  private _getOperations(\n    options?: GetOperationsOptionalParams\n  ): Promise<GetOperationsOperationResponse> {\n    return this.sendOperationRequest({ options }, getOperationsOperationSpec);\n  }\n\n  /**\n   * Gets operation info.\n   * @param operationId Unique operation ID.\n   * @param options The options parameters.\n   */\n  getOperation(\n    operationId: string,\n    options?: GetOperationOptionalParams\n  ): Promise<GetOperationResponse> {\n    return this.sendOperationRequest(\n      { operationId, options },\n      getOperationOperationSpec\n    );\n  }\n\n  /**\n   * List all document models\n   * @param options The options parameters.\n   */\n  private _getDocumentModels(\n    options?: GetDocumentModelsOptionalParams\n  ): Promise<GetDocumentModelsOperationResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getDocumentModelsOperationSpec\n    );\n  }\n\n  /**\n   * Gets detailed document model information.\n   * @param modelId Unique document model name.\n   * @param options The options parameters.\n   */\n  getDocumentModel(\n    modelId: string,\n    options?: GetDocumentModelOptionalParams\n  ): Promise<GetDocumentModelResponse> {\n    return this.sendOperationRequest(\n      { modelId, options },\n      getDocumentModelOperationSpec\n    );\n  }\n\n  /**\n   * Deletes document model.\n   * @param modelId Unique document model name.\n   * @param options The options parameters.\n   */\n  deleteDocumentModel(\n    modelId: string,\n    options?: DeleteDocumentModelOptionalParams\n  ): Promise<void> {\n    return this.sendOperationRequest(\n      { modelId, options },\n      deleteDocumentModelOperationSpec\n    );\n  }\n\n  /**\n   * Return information about the current resource.\n   * @param options The options parameters.\n   */\n  getResourceDetails(\n    options?: GetResourceDetailsOptionalParams\n  ): Promise<GetResourceDetailsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getResourceDetailsOperationSpec\n    );\n  }\n\n  /**\n   * GetOperationsNext\n   * @param nextLink The nextLink from the previous successful call to the GetOperations method.\n   * @param options The options parameters.\n   */\n  private _getOperationsNext(\n    nextLink: string,\n    options?: GetOperationsNextOptionalParams\n  ): Promise<GetOperationsNextResponse> {\n    return this.sendOperationRequest(\n      { nextLink, options },\n      getOperationsNextOperationSpec\n    );\n  }\n\n  /**\n   * GetDocumentModelsNext\n   * @param nextLink The nextLink from the previous successful call to the GetDocumentModels method.\n   * @param options The options parameters.\n   */\n  private _getDocumentModelsNext(\n    nextLink: string,\n    options?: GetDocumentModelsNextOptionalParams\n  ): Promise<GetDocumentModelsNextResponse> {\n    return this.sendOperationRequest(\n      { nextLink, options },\n      getDocumentModelsNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst analyzeDocument$binaryOperationSpec: coreClient.OperationSpec = {\n  path: \"/documentModels/{modelId}:analyze\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      headersMapper: Mappers.GeneratedClientAnalyzeDocumentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.analyzeRequest,\n  queryParameters: [\n    Parameters.pages,\n    Parameters.locale,\n    Parameters.stringIndexType,\n    Parameters.apiVersion\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.modelId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"binary\",\n  serializer\n};\nconst analyzeDocument$jsonOperationSpec: coreClient.OperationSpec = {\n  path: \"/documentModels/{modelId}:analyze\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      headersMapper: Mappers.GeneratedClientAnalyzeDocumentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.analyzeRequest1,\n  queryParameters: [\n    Parameters.pages,\n    Parameters.locale,\n    Parameters.stringIndexType,\n    Parameters.apiVersion\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.modelId],\n  headerParameters: [Parameters.contentType1, Parameters.accept1],\n  mediaType: \"json\",\n  serializer\n};\nconst getAnalyzeDocumentResultOperationSpec: coreClient.OperationSpec = {\n  path: \"/documentModels/{modelId}/analyzeResults/{resultId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AnalyzeResultOperation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.modelId, Parameters.resultId],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst buildDocumentModelOperationSpec: coreClient.OperationSpec = {\n  path: \"/documentModels:build\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      headersMapper: Mappers.GeneratedClientBuildDocumentModelHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.buildRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept1, Parameters.contentType2],\n  mediaType: \"json\",\n  serializer\n};\nconst composeDocumentModelOperationSpec: coreClient.OperationSpec = {\n  path: \"/documentModels:compose\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      headersMapper: Mappers.GeneratedClientComposeDocumentModelHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.composeRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept1, Parameters.contentType2],\n  mediaType: \"json\",\n  serializer\n};\nconst authorizeCopyDocumentModelOperationSpec: coreClient.OperationSpec = {\n  path: \"/documentModels:authorizeCopy\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CopyAuthorization\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.authorizeCopyRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept1, Parameters.contentType2],\n  mediaType: \"json\",\n  serializer\n};\nconst copyDocumentModelToOperationSpec: coreClient.OperationSpec = {\n  path: \"/documentModels/{modelId}:copyTo\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      headersMapper: Mappers.GeneratedClientCopyDocumentModelToHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.copyToRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.modelId],\n  headerParameters: [Parameters.accept1, Parameters.contentType2],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationsOperationSpec: coreClient.OperationSpec = {\n  path: \"/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetOperationsResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst getOperationOperationSpec: coreClient.OperationSpec = {\n  path: \"/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationDetails\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.operationId],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst getDocumentModelsOperationSpec: coreClient.OperationSpec = {\n  path: \"/documentModels\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetDocumentModelsResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst getDocumentModelOperationSpec: coreClient.OperationSpec = {\n  path: \"/documentModels/{modelId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DocumentModelDetails\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.modelId],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst deleteDocumentModelOperationSpec: coreClient.OperationSpec = {\n  path: \"/documentModels/{modelId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.modelId],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst getResourceDetailsOperationSpec: coreClient.OperationSpec = {\n  path: \"/info\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceDetails\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst getOperationsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetOperationsResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst getDocumentModelsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetDocumentModelsResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\n"]}